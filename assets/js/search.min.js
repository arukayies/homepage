var lunrIndex,$results,pagesIndex,tinySegmenter;function initLunr(){tinySegmenter=new lunr.TinySegmenter;return new Promise((resolve,reject)=>{var request=new XMLHttpRequest;request.open("GET","/homepage/index.json",true);request.onload=function(){if(request.status>=200&&request.status<400){pagesIndex=JSON.parse(request.responseText);console.log("index:",pagesIndex);lunrIndex=lunr(function(){this.use(lunr.ja);this.field("title",{boost:10});this.field("categories");this.field("tags");this.field("description");this.ref("href");for(var i=0;i<pagesIndex.length;++i){this.add(pagesIndex[i])}resolve()})}else{var err=`HTTP error ${request.status}: ${request.statusText}`;console.error("Error getting Hugo index file:",err);reject(err)}};request.onerror=function(){var err="Network error";console.error("Error getting Hugo index file:",err);reject(err)};request.send()})}function initUI(){$results=document.getElementById("results");$search=document.getElementById("search");$search.onkeyup=function(){while($results.firstChild){$results.removeChild($results.firstChild)}var query=$search.value;query=decodeURI(query);var results=search(query);renderResults(results)}}function search(query){var segs=tinySegmenter.segment(query);segs=segs.map(function(seg){seg=seg.trim();if(seg.length){seg=`+*${seg}*`}return seg});query=segs.join(" ").replace(/\s+/g," ").trim();console.log("search:",query);return lunrIndex.search(query).map(function(result){return pagesIndex.filter(function(page){return page.href===result.ref})[0]})}function renderResults(results){if(!results.length){return}$results=document.getElementById("results");results.slice(0,10).forEach(function(result){var div=document.createElement("div");var category="";if(result.categories){category=`\n                <a href="/categories/${result.categories}">\n                    <i class="fas fa-folder"></i>&nbsp;${result.categories}\n                </a>\n            `}var tag="";if(result.tags){var list=result.tags.map(function(val){return`\n                    <li class="partials__tagList__item">\n                        <a href="/tags/${val}" class="partials__tagList__itemLink">\n                            <i class="fas fa-tag partials__tagList__itemIcon"></i>${val}\n                        </a>\n                    </li>\n                `});tag=`\n                <ul class="partials__tagList">\n                    ${list.join("")}\n                </ul>\n            `}div.innerHTML=`\n            <article class="partials__articleCard">\n                <div class="partials__articleCard__inner">\n                    <a href="${result.href}" class="partials__articleCard__link"></a>\n                    <img src='${result.thumbnail}' alt="${result.title}" loading="lazy" class="partials__articleCard__thumbnail">\n                    <h4 class="partials__articleCard__title">\n                        ${result.title}\n                    </h4>\n                    <div class="partials__articleCard__detail">\n                        ${category}\n                        <div class="partials__articleCard__detail__center"></div>\n                        <div>\n                            <i class="fas fa-clock"></i>&nbsp;${result.lastmod}\n                        </div>\n                    </div>\n                    ${tag}\n                    <div class="partials__articleCard__description">\n                        ${result.summary}\n                    </div>\n                </div>\n            </article>\n        `;if($results){$results.appendChild(div)}else{console.error("Element with ID 'results' not found. Cannot render search results.")}})}document.addEventListener("DOMContentLoaded",function(){initUI();initLunr().then(function(){var query=getQuery()["query"]||"";query=decodeURI(query);var results=search(query);renderResults(results);if(query.length){document.getElementById("list-title").innerText=`「${query}」を検索`}}).catch(function(error){console.error("Failed to initialize Lunr or search:",error)})});function getQuery(){var queryString=window.location.search;queryString=queryString.slice(1);var queries={};queryString.split("&").forEach(function(item){const q=item.split("=");queries[q[0]]=q[1]});return queries}